<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 12.2.1 (20241206.2353)
 -->
<!-- Title: workerpool.exe Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[/** 
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the 
 * first g-element), including the the library into any SVG adds the following 
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2019 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its 
 *       contributors may be used to endorse or promote products derived from 
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;
var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

	setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 946.75)">
<title>workerpool.exe</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-946.75 1034.25,-946.75 1034.25,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-760.5 8,-934.75 910,-934.75 910,-760.5 8,-760.5"/>
</g>
<!-- File: workerpool.exe -->
<g id="node1" class="node">
<title>File: workerpool.exe</title>
<g id="a_node1"><a xlink:title="workerpool.exe">
<polygon fill="#f8f8f8" stroke="black" points="902.38,-926.75 15.62,-926.75 15.62,-768.5 902.38,-768.5 902.38,-926.75"/>
<text text-anchor="start" x="23.62" y="-907.55" font-family="Times New Roman,serif" font-size="16.00">File: workerpool.exe</text>
<text text-anchor="start" x="23.62" y="-888.8" font-family="Times New Roman,serif" font-size="16.00">Build ID: C:\Users\HP\AppData\Local\Temp\go&#45;build1661177487\b001\exe\workerpool.exe2025&#45;01&#45;17 15:56:08.7574869 +0530 IST</text>
<text text-anchor="start" x="23.62" y="-870.05" font-family="Times New Roman,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="23.62" y="-851.3" font-family="Times New Roman,serif" font-size="16.00">Time: Jan 17, 2025 at 3:56pm (IST)</text>
<text text-anchor="start" x="23.62" y="-832.55" font-family="Times New Roman,serif" font-size="16.00">Duration: 14.01s, Total samples = 10ms (0.071%)</text>
<text text-anchor="start" x="23.62" y="-813.8" font-family="Times New Roman,serif" font-size="16.00">Showing nodes accounting for 10ms, 100% of 10ms total</text>
<text text-anchor="start" x="23.62" y="-776.05" font-family="Times New Roman,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="unicode/utf8.FullRune (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="1030.25,-89 883.75,-89 883.75,0 1030.25,0 1030.25,-89"/>
<text text-anchor="middle" x="957" y="-62.2" font-family="Times New Roman,serif" font-size="24.00">utf8</text>
<text text-anchor="middle" x="957" y="-35.2" font-family="Times New Roman,serif" font-size="24.00">FullRune</text>
<text text-anchor="middle" x="957" y="-8.2" font-family="Times New Roman,serif" font-size="24.00">10ms (100%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="main.executeTask (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-866.25 920.12,-866.25 920.12,-829 993.88,-829 993.88,-866.25"/>
<text text-anchor="middle" x="957" y="-854.65" font-family="Times New Roman,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="957" y="-844.9" font-family="Times New Roman,serif" font-size="8.00">executeTask</text>
<text text-anchor="middle" x="957" y="-835.15" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="fmt.Println (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-699.5 920.12,-699.5 920.12,-662.25 993.88,-662.25 993.88,-699.5"/>
<text text-anchor="middle" x="957" y="-687.9" font-family="Times New Roman,serif" font-size="8.00">fmt</text>
<text text-anchor="middle" x="957" y="-678.15" font-family="Times New Roman,serif" font-size="8.00">Println</text>
<text text-anchor="middle" x="957" y="-668.4" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N4 -->
<g id="edge5" class="edge">
<title>N2&#45;&gt;N4</title>
<g id="a_edge5"><a xlink:title="main.executeTask &#45;&gt; fmt.Println (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-828.68C957,-801.69 957,-750.18 957,-715.92"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-716.25 957,-706.25 951.75,-716.25 962.25,-716.25"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="main.executeTask &#45;&gt; fmt.Println (10ms)">
<text text-anchor="middle" x="978.75" y="-737.2" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
<text text-anchor="middle" x="978.75" y="-720.7" font-family="Times New Roman,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="fmt.Fprintln (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-609.75 920.12,-609.75 920.12,-572.5 993.88,-572.5 993.88,-609.75"/>
<text text-anchor="middle" x="957" y="-598.15" font-family="Times New Roman,serif" font-size="8.00">fmt</text>
<text text-anchor="middle" x="957" y="-588.4" font-family="Times New Roman,serif" font-size="8.00">Fprintln</text>
<text text-anchor="middle" x="957" y="-578.65" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="os.(*File).Write (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-520 920.12,-520 920.12,-473 993.88,-473 993.88,-520"/>
<text text-anchor="middle" x="957" y="-508.4" font-family="Times New Roman,serif" font-size="8.00">os</text>
<text text-anchor="middle" x="957" y="-498.65" font-family="Times New Roman,serif" font-size="8.00">(*File)</text>
<text text-anchor="middle" x="957" y="-488.9" font-family="Times New Roman,serif" font-size="8.00">Write</text>
<text text-anchor="middle" x="957" y="-479.15" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N7 -->
<g id="edge1" class="edge">
<title>N3&#45;&gt;N7</title>
<g id="a_edge1"><a xlink:title="fmt.Fprintln &#45;&gt; os.(*File).Write (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-572.27C957,-562.07 957,-548.88 957,-536.42"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-536.69 957,-526.69 951.75,-536.69 962.25,-536.69"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="fmt.Fprintln &#45;&gt; os.(*File).Write (10ms)">
<text text-anchor="middle" x="973.88" y="-541.2" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N3 -->
<g id="edge2" class="edge">
<title>N4&#45;&gt;N3</title>
<g id="a_edge2"><a xlink:title="fmt.Println &#45;&gt; fmt.Fprintln (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-662.12C957,-651.84 957,-638.55 957,-626.32"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-626.61 957,-616.61 951.75,-626.61 962.25,-626.61"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="fmt.Println &#45;&gt; fmt.Fprintln (10ms)">
<text text-anchor="middle" x="973.88" y="-630.95" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="internal/poll.(*FD).Write (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-304.5 920.12,-304.5 920.12,-257.5 993.88,-257.5 993.88,-304.5"/>
<text text-anchor="middle" x="957" y="-292.9" font-family="Times New Roman,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="957" y="-283.15" font-family="Times New Roman,serif" font-size="8.00">(*FD)</text>
<text text-anchor="middle" x="957" y="-273.4" font-family="Times New Roman,serif" font-size="8.00">Write</text>
<text text-anchor="middle" x="957" y="-263.65" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="internal/poll.(*FD).writeConsole (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-205 920.12,-205 920.12,-158 993.88,-158 993.88,-205"/>
<text text-anchor="middle" x="957" y="-193.4" font-family="Times New Roman,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="957" y="-183.65" font-family="Times New Roman,serif" font-size="8.00">(*FD)</text>
<text text-anchor="middle" x="957" y="-173.9" font-family="Times New Roman,serif" font-size="8.00">writeConsole</text>
<text text-anchor="middle" x="957" y="-164.15" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N6 -->
<g id="edge3" class="edge">
<title>N5&#45;&gt;N6</title>
<g id="a_edge3"><a xlink:title="internal/poll.(*FD).Write &#45;&gt; internal/poll.(*FD).writeConsole (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-257.39C957,-246.76 957,-233.77 957,-221.62"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-221.78 957,-211.78 951.75,-221.78 962.25,-221.78"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="internal/poll.(*FD).Write &#45;&gt; internal/poll.(*FD).writeConsole (10ms)">
<text text-anchor="middle" x="973.88" y="-226.2" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N1 -->
<g id="edge4" class="edge">
<title>N6&#45;&gt;N1</title>
<g id="a_edge4"><a xlink:title="internal/poll.(*FD).writeConsole &#45;&gt; unicode/utf8.FullRune (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-157.6C957,-143.24 957,-124.01 957,-105.54"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-105.75 957,-95.75 951.75,-105.75 962.25,-105.75"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="internal/poll.(*FD).writeConsole &#45;&gt; unicode/utf8.FullRune (10ms)">
<text text-anchor="middle" x="978.75" y="-126.7" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
<text text-anchor="middle" x="978.75" y="-110.2" font-family="Times New Roman,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="os.(*File).write (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="993.88,-404 920.12,-404 920.12,-357 993.88,-357 993.88,-404"/>
<text text-anchor="middle" x="957" y="-392.4" font-family="Times New Roman,serif" font-size="8.00">os</text>
<text text-anchor="middle" x="957" y="-382.65" font-family="Times New Roman,serif" font-size="8.00">(*File)</text>
<text text-anchor="middle" x="957" y="-372.9" font-family="Times New Roman,serif" font-size="8.00">write</text>
<text text-anchor="middle" x="957" y="-363.15" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N8 -->
<g id="edge6" class="edge">
<title>N7&#45;&gt;N8</title>
<g id="a_edge6"><a xlink:title="os.(*File).Write &#45;&gt; os.(*File).write (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-472.7C957,-457.79 957,-437.92 957,-420.54"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-420.71 957,-410.71 951.75,-420.71 962.25,-420.71"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="os.(*File).Write &#45;&gt; os.(*File).write (10ms)">
<text text-anchor="middle" x="978.75" y="-441.7" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
<text text-anchor="middle" x="978.75" y="-425.2" font-family="Times New Roman,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N5 -->
<g id="edge7" class="edge">
<title>N8&#45;&gt;N5</title>
<g id="a_edge7"><a xlink:title="os.(*File).write &#45;&gt; internal/poll.(*FD).Write (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M957,-356.89C957,-346.26 957,-333.27 957,-321.12"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="962.25,-321.28 957,-311.28 951.75,-321.28 962.25,-321.28"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="os.(*File).write &#45;&gt; internal/poll.(*FD).Write (10ms)">
<text text-anchor="middle" x="973.88" y="-325.7" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
</g>
</g></svg>
